Node.js - Javascript run time environment for server side programming (Allows to run js code outside browser)
Node REPL - type node in CMD and we enter node REPL. We can execute js commands. "global"object in REPL is eqivalent to "window" object in browser.
Process : Object that provides information about current node.js process
process.argv : Returns an array containing command line arguments passed when node.js process is launched

Export File :
module.exports
require() - to include external modules that exist in different files
module.exports - special object
eg. module.exports="hello"; (in math.js)
const a = require("./math.js");

Export Folder :
folder has multiple files each with module.export. There is index.js which has requires("./file") and exports it as an array.
In the place of import add requires("/folder") and use the variable.

NPM - Node Package Manager
npm install <package> 
Creates 
 1. node_modules folder - Contains all dependancies
 2.package-lock.json - Records the exact version of all dependancies and sub-dependancies
 3.package.json - Contains functional metadata about the project like name, dependancies and version
 With packaage.json we need to run nom install and node modules get installed
 Global installation -
 npm install -g <package-name>
 npm link <package-name>

 Import (Vs require) : from ES6
 import {sum} from './math.js'
 With import we can selectively import, hence saving memory. Which is not possible with require.
 Loading is synchronous with require and asynchronous with import

