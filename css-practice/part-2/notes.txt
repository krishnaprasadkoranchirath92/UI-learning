
  1. universal selector :
* {
    property:value;
}
2. Element selector :
h1{
    property:value;
}
3. Id selector :
#id {
     property:value;
}
4. Class Selector:
.class {
    property:value;
}
5. Descendent Selector: When h3 tag comes under p tag
p h3 {
    text-decoration: underline;
}
6. Sibling Combinator : To style h3 which comes in the same level (sibling) as p
p+h3 {
    text-decoration: underline;
}
Child Combinator :
div>input {
    background-color: aquamarine;
}
The direct descendant will have the style done.
Descendent Selector may not be the direct child. The child can be of any level

Universal selector
class Selector
id selector
Descendent selector - p h1

Color all paragraphs inside div with id "myId" to green
div[id="myId"] p{
color:green;
}
#myId p {
    color:green;
    
}

sibling combinaTOR - +
CHILD COMBINATOR - >

Attribute Selector : Selects elememts based on the presence or value of an Attribute
input[type="text"] {
    color : green;
}
input[type="password"]v{
    color:red;
}
input[type] {
    background-color:aquamarine;
}

div p {
    color : green
}

Select div's with id "myId"
#myId {
 color:green;   
}
div[id="myId"] {
    color:green;  
}

Psuedo Class :
Keyword added to selector that specifies a special state od an element.
:hover
:active
:checked
input[type="radio"]:active+label {
    color:red;
} -> Gives color to the label when radio button is clicked
:nth-of-type
p:nth-of-type(2n) {
    color:red;
} -> Changes the color of even index paragraphs

Psuedo Elements :
Selector that allows to style specific part of an element
::first-letter
::first-line
::selection - Style elements on selection

Cascade - CSS cascade algorithm selects CSS declaration to determine correct value of CSS property
h2 {
    background-color: yellow;
}
h2 {
    background-color:green;
}
background-color:green will be used since it is coming last.
If there are multiple css files linked to an HTML page the property in the last CSS file will be considered

If selectors are different, then the styling will be determined by specificity.
Specificity(3 digit number) : Algorithm that calculates the weight applied to CSS declaration.
1. Priority to calculate specificity is as below :
Inline style    >    id       >   class, attribute, psuedo-class    >      element and psuedo-element
2. More selectors > less selectors
3. If specificity is same, then styling is based on cascading. The last style is used.

!importanat -  Shows the most specific thing in the document. This style will take the most priority in style
h2 {
    color: blue !importanat
}


Inheritance :
HTML elememts inherit properties from parent element automatically.
In case of input field ot button etc., we need to explicitly mention -
input {
    color:inherit; 
}
button {
    color:inherit;
}
Some properties like width, height, border are non-inheritable
selectors -> combinators ->specificity -> inheritance