Advantages of GIT (version control system):
1. Collaborate among developers
2. Track history
Git : Software/ tool for version control
Github : Website that uses git to host repositories and Collaborate

Git commands
git config --list       //list out the configuration
git config --global user.name "kp"      // sets user name
git config --global user.emal "user.gmail.com"      //sets email
git clone <link>        //clone repository to local machine
git status          //gives state of the code
git add         //files get staged
git commit -m 'message'
git push

Create a project locally and push to remote
git init            //Creates .git file. Initializes git
Create a repository in github Website -> gives remote link
git remote add origin <--link-->
git remote -v       //verify remote - gives the remote git

git branch          //Check branch
git branch -M main      // rename the branch name to main
git push origin main        // push the local changes to main branch in remote git 
git push -u origin main         //set upstream to main (no need to specify remote branch in future)
git commit -am 'message'        //Add and commit together
git checkout <branch name>      //navigate to different branch
git checkout -b <new branch name>       //to create new branch
git branch -d <branch name>         //delete branch
git push --set-upstream origin feature      //Branch was cretaed locally and needs has no upstream currently

git diff <--branch-->       //gives the difference between current branch and given branch
git merge <--branch-->      //merge the changes in given branch to currnt branch
git pull origin main        // brings remote changes in git to current branch in local (changes from remote main branch will be pulled to local of working branch)

Merge Conflicts
Git is unable to resolve merge Conflicts

Fixing Mistakes
1. Changes staged but not commited :
git reset <filename>        //reverses the add operation for that file
git reset       //unadds all the files
 2. Changes are commited and we need to go one commit back
    a. Go back by one commit
        git reset HEAD~1
    b. Go back to a past commit
        git reset <--commit hash-->
        git reset --hard <--commit hash -->
            .......


 